node {
  name: "input_images"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "MirrorPad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\n\000\000\000\n\000\000\000\n\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "MirrorPad"
  op: "MirrorPad"
  input: "input_images"
  input: "MirrorPad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "mode"
    value {
      s: "REFLECT"
    }
  }
}
node {
  name: "generator/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\t\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0460043698549
      }
    }
  }
}
node {
  name: "generator/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0460043698549
      }
    }
  }
}
node {
  name: "generator/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/conv1/kernel/Initializer/random_uniform/max"
  input: "generator/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/conv1/kernel/Initializer/random_uniform/mul"
  input: "generator/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 9
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv1/kernel/Assign"
  op: "Assign"
  input: "generator/conv1/kernel"
  input: "generator/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv1/kernel/read"
  op: "Identity"
  input: "generator/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv1/bias/Assign"
  op: "Assign"
  input: "generator/conv1/bias"
  input: "generator/conv1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv1/bias/read"
  op: "Identity"
  input: "generator/conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv1/bias"
      }
    }
  }
}
node {
  name: "generator/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv1/Conv2D"
  op: "Conv2D"
  input: "MirrorPad"
  input: "generator/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv1/BiasAdd"
  op: "BiasAdd"
  input: "generator/conv1/Conv2D"
  input: "generator/conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/moments/mean"
  op: "Mean"
  input: "generator/conv1/BiasAdd"
  input: "generator/InstanceNorm_conv1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/moments/StopGradient"
  op: "StopGradient"
  input: "generator/InstanceNorm_conv1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/conv1/BiasAdd"
  input: "generator/InstanceNorm_conv1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/moments/variance"
  op: "Mean"
  input: "generator/InstanceNorm_conv1/moments/SquaredDifference"
  input: "generator/InstanceNorm_conv1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/sub"
  op: "Sub"
  input: "generator/conv1/BiasAdd"
  input: "generator/InstanceNorm_conv1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999971718e-10
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/add"
  op: "Add"
  input: "generator/InstanceNorm_conv1/moments/variance"
  input: "generator/InstanceNorm_conv1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/Sqrt"
  op: "Sqrt"
  input: "generator/InstanceNorm_conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv1/div"
  op: "RealDiv"
  input: "generator/InstanceNorm_conv1/sub"
  input: "generator/InstanceNorm_conv1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/Relu"
  op: "Relu"
  input: "generator/InstanceNorm_conv1/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358169
      }
    }
  }
}
node {
  name: "generator/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358169
      }
    }
  }
}
node {
  name: "generator/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/conv2/kernel/Initializer/random_uniform/max"
  input: "generator/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/conv2/kernel/Initializer/random_uniform/mul"
  input: "generator/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv2/kernel/Assign"
  op: "Assign"
  input: "generator/conv2/kernel"
  input: "generator/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv2/kernel/read"
  op: "Identity"
  input: "generator/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv2/bias/Assign"
  op: "Assign"
  input: "generator/conv2/bias"
  input: "generator/conv2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv2/bias/read"
  op: "Identity"
  input: "generator/conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv2/bias"
      }
    }
  }
}
node {
  name: "generator/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv2/Conv2D"
  op: "Conv2D"
  input: "generator/Relu"
  input: "generator/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv2/BiasAdd"
  op: "BiasAdd"
  input: "generator/conv2/Conv2D"
  input: "generator/conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/moments/mean"
  op: "Mean"
  input: "generator/conv2/BiasAdd"
  input: "generator/InstanceNorm_conv2/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/moments/StopGradient"
  op: "StopGradient"
  input: "generator/InstanceNorm_conv2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/conv2/BiasAdd"
  input: "generator/InstanceNorm_conv2/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/moments/variance"
  op: "Mean"
  input: "generator/InstanceNorm_conv2/moments/SquaredDifference"
  input: "generator/InstanceNorm_conv2/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/sub"
  op: "Sub"
  input: "generator/conv2/BiasAdd"
  input: "generator/InstanceNorm_conv2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999971718e-10
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/add"
  op: "Add"
  input: "generator/InstanceNorm_conv2/moments/variance"
  input: "generator/InstanceNorm_conv2/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/Sqrt"
  op: "Sqrt"
  input: "generator/InstanceNorm_conv2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv2/div"
  op: "RealDiv"
  input: "generator/InstanceNorm_conv2/sub"
  input: "generator/InstanceNorm_conv2/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/Relu_1"
  op: "Relu"
  input: "generator/InstanceNorm_conv2/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/conv3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653322
      }
    }
  }
}
node {
  name: "generator/conv3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653322
      }
    }
  }
}
node {
  name: "generator/conv3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/conv3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/conv3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/conv3/kernel/Initializer/random_uniform/max"
  input: "generator/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
}
node {
  name: "generator/conv3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/conv3/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/conv3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
}
node {
  name: "generator/conv3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/conv3/kernel/Initializer/random_uniform/mul"
  input: "generator/conv3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
}
node {
  name: "generator/conv3/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv3/kernel/Assign"
  op: "Assign"
  input: "generator/conv3/kernel"
  input: "generator/conv3/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv3/kernel/read"
  op: "Identity"
  input: "generator/conv3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/kernel"
      }
    }
  }
}
node {
  name: "generator/conv3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/conv3/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/conv3/bias/Assign"
  op: "Assign"
  input: "generator/conv3/bias"
  input: "generator/conv3/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv3/bias/read"
  op: "Identity"
  input: "generator/conv3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/conv3/bias"
      }
    }
  }
}
node {
  name: "generator/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/conv3/Conv2D"
  op: "Conv2D"
  input: "generator/Relu_1"
  input: "generator/conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/conv3/BiasAdd"
  op: "BiasAdd"
  input: "generator/conv3/Conv2D"
  input: "generator/conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/moments/mean"
  op: "Mean"
  input: "generator/conv3/BiasAdd"
  input: "generator/InstanceNorm_conv3/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/moments/StopGradient"
  op: "StopGradient"
  input: "generator/InstanceNorm_conv3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/conv3/BiasAdd"
  input: "generator/InstanceNorm_conv3/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/moments/variance"
  op: "Mean"
  input: "generator/InstanceNorm_conv3/moments/SquaredDifference"
  input: "generator/InstanceNorm_conv3/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/sub"
  op: "Sub"
  input: "generator/conv3/BiasAdd"
  input: "generator/InstanceNorm_conv3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999971718e-10
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/add"
  op: "Add"
  input: "generator/InstanceNorm_conv3/moments/variance"
  input: "generator/InstanceNorm_conv3/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/Sqrt"
  op: "Sqrt"
  input: "generator/InstanceNorm_conv3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_conv3/div"
  op: "RealDiv"
  input: "generator/InstanceNorm_conv3/sub"
  input: "generator/InstanceNorm_conv3/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/Relu_2"
  op: "Relu"
  input: "generator/InstanceNorm_conv3/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res1/conv1/kernel"
  input: "generator/ResidualBlock_res1/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res1/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res1/conv1/bias"
  input: "generator/ResidualBlock_res1/conv1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res1/conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv1/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/Conv2D"
  op: "Conv2D"
  input: "generator/Relu_2"
  input: "generator/ResidualBlock_res1/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res1/conv1/Conv2D"
  input: "generator/ResidualBlock_res1/conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv1/Relu"
  op: "Relu"
  input: "generator/ResidualBlock_res1/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res1/conv2/kernel"
  input: "generator/ResidualBlock_res1/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res1/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res1/conv2/bias"
  input: "generator/ResidualBlock_res1/conv2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res1/conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res1/conv2/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/Conv2D"
  op: "Conv2D"
  input: "generator/ResidualBlock_res1/conv1/Relu"
  input: "generator/ResidualBlock_res1/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/conv2/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res1/conv2/Conv2D"
  input: "generator/ResidualBlock_res1/conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res1/add"
  op: "Add"
  input: "generator/Relu_2"
  input: "generator/ResidualBlock_res1/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res2/conv1/kernel"
  input: "generator/ResidualBlock_res2/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res2/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res2/conv1/bias"
  input: "generator/ResidualBlock_res2/conv1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res2/conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv1/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/Conv2D"
  op: "Conv2D"
  input: "generator/ResidualBlock_res1/add"
  input: "generator/ResidualBlock_res2/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res2/conv1/Conv2D"
  input: "generator/ResidualBlock_res2/conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv1/Relu"
  op: "Relu"
  input: "generator/ResidualBlock_res2/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res2/conv2/kernel"
  input: "generator/ResidualBlock_res2/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res2/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res2/conv2/bias"
  input: "generator/ResidualBlock_res2/conv2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res2/conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res2/conv2/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/Conv2D"
  op: "Conv2D"
  input: "generator/ResidualBlock_res2/conv1/Relu"
  input: "generator/ResidualBlock_res2/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/conv2/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res2/conv2/Conv2D"
  input: "generator/ResidualBlock_res2/conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res2/add"
  op: "Add"
  input: "generator/ResidualBlock_res1/add"
  input: "generator/ResidualBlock_res2/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res3/conv1/kernel"
  input: "generator/ResidualBlock_res3/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res3/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res3/conv1/bias"
  input: "generator/ResidualBlock_res3/conv1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res3/conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv1/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/Conv2D"
  op: "Conv2D"
  input: "generator/ResidualBlock_res2/add"
  input: "generator/ResidualBlock_res3/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res3/conv1/Conv2D"
  input: "generator/ResidualBlock_res3/conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv1/Relu"
  op: "Relu"
  input: "generator/ResidualBlock_res3/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res3/conv2/kernel"
  input: "generator/ResidualBlock_res3/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res3/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res3/conv2/bias"
  input: "generator/ResidualBlock_res3/conv2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res3/conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res3/conv2/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/Conv2D"
  op: "Conv2D"
  input: "generator/ResidualBlock_res3/conv1/Relu"
  input: "generator/ResidualBlock_res3/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/conv2/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res3/conv2/Conv2D"
  input: "generator/ResidualBlock_res3/conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res3/add"
  op: "Add"
  input: "generator/ResidualBlock_res2/add"
  input: "generator/ResidualBlock_res3/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res4/conv1/kernel"
  input: "generator/ResidualBlock_res4/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res4/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res4/conv1/bias"
  input: "generator/ResidualBlock_res4/conv1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res4/conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv1/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/Conv2D"
  op: "Conv2D"
  input: "generator/ResidualBlock_res3/add"
  input: "generator/ResidualBlock_res4/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res4/conv1/Conv2D"
  input: "generator/ResidualBlock_res4/conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv1/Relu"
  op: "Relu"
  input: "generator/ResidualBlock_res4/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res4/conv2/kernel"
  input: "generator/ResidualBlock_res4/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res4/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res4/conv2/bias"
  input: "generator/ResidualBlock_res4/conv2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res4/conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res4/conv2/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/Conv2D"
  op: "Conv2D"
  input: "generator/ResidualBlock_res4/conv1/Relu"
  input: "generator/ResidualBlock_res4/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/conv2/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res4/conv2/Conv2D"
  input: "generator/ResidualBlock_res4/conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res4/add"
  op: "Add"
  input: "generator/ResidualBlock_res3/add"
  input: "generator/ResidualBlock_res4/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res5/conv1/kernel"
  input: "generator/ResidualBlock_res5/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res5/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res5/conv1/bias"
  input: "generator/ResidualBlock_res5/conv1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res5/conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv1/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/Conv2D"
  op: "Conv2D"
  input: "generator/ResidualBlock_res4/add"
  input: "generator/ResidualBlock_res5/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res5/conv1/Conv2D"
  input: "generator/ResidualBlock_res5/conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv1/Relu"
  op: "Relu"
  input: "generator/ResidualBlock_res5/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/max"
  input: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/mul"
  input: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res5/conv2/kernel"
  input: "generator/ResidualBlock_res5/conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/kernel/read"
  op: "Identity"
  input: "generator/ResidualBlock_res5/conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/kernel"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/bias/Assign"
  op: "Assign"
  input: "generator/ResidualBlock_res5/conv2/bias"
  input: "generator/ResidualBlock_res5/conv2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/bias/read"
  op: "Identity"
  input: "generator/ResidualBlock_res5/conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResidualBlock_res5/conv2/bias"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/Conv2D"
  op: "Conv2D"
  input: "generator/ResidualBlock_res5/conv1/Relu"
  input: "generator/ResidualBlock_res5/conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/conv2/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResidualBlock_res5/conv2/Conv2D"
  input: "generator/ResidualBlock_res5/conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/ResidualBlock_res5/add"
  op: "Add"
  input: "generator/ResidualBlock_res4/add"
  input: "generator/ResidualBlock_res5/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/Shape"
  op: "Shape"
  input: "generator/ResidualBlock_res5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/strided_slice"
  op: "StridedSlice"
  input: "generator/ResizeConv2d_resize_conv1/Shape"
  input: "generator/ResizeConv2d_resize_conv1/strided_slice/stack"
  input: "generator/ResizeConv2d_resize_conv1/strided_slice/stack_1"
  input: "generator/ResizeConv2d_resize_conv1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/Shape_1"
  op: "Shape"
  input: "generator/ResidualBlock_res5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/strided_slice_1"
  op: "StridedSlice"
  input: "generator/ResizeConv2d_resize_conv1/Shape_1"
  input: "generator/ResizeConv2d_resize_conv1/strided_slice_1/stack"
  input: "generator/ResizeConv2d_resize_conv1/strided_slice_1/stack_1"
  input: "generator/ResizeConv2d_resize_conv1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/mul"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv1/strided_slice_1"
  input: "generator/ResizeConv2d_resize_conv1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/mul_1"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv1/mul"
  input: "generator/ResizeConv2d_resize_conv1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/mul_2"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv1/strided_slice"
  input: "generator/ResizeConv2d_resize_conv1/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/mul_3"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv1/mul_2"
  input: "generator/ResizeConv2d_resize_conv1/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/size"
  op: "Pack"
  input: "generator/ResizeConv2d_resize_conv1/mul_1"
  input: "generator/ResizeConv2d_resize_conv1/mul_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/ResizeNearestNeighbor"
  op: "ResizeNearestNeighbor"
  input: "generator/ResidualBlock_res5/add"
  input: "generator/ResizeConv2d_resize_conv1/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653322
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653322
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/max"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/mul"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Assign"
  op: "Assign"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/kernel/read"
  op: "Identity"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/bias/Assign"
  op: "Assign"
  input: "generator/ResizeConv2d_resize_conv1/conv1/bias"
  input: "generator/ResizeConv2d_resize_conv1/conv1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/bias/read"
  op: "Identity"
  input: "generator/ResizeConv2d_resize_conv1/conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv1/conv1/bias"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/Conv2D"
  op: "Conv2D"
  input: "generator/ResizeConv2d_resize_conv1/ResizeNearestNeighbor"
  input: "generator/ResizeConv2d_resize_conv1/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv1/conv1/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResizeConv2d_resize_conv1/conv1/Conv2D"
  input: "generator/ResizeConv2d_resize_conv1/conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/moments/mean"
  op: "Mean"
  input: "generator/ResizeConv2d_resize_conv1/conv1/BiasAdd"
  input: "generator/InstanceNorm_resize_conv1/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/moments/StopGradient"
  op: "StopGradient"
  input: "generator/InstanceNorm_resize_conv1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/ResizeConv2d_resize_conv1/conv1/BiasAdd"
  input: "generator/InstanceNorm_resize_conv1/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/moments/variance"
  op: "Mean"
  input: "generator/InstanceNorm_resize_conv1/moments/SquaredDifference"
  input: "generator/InstanceNorm_resize_conv1/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/sub"
  op: "Sub"
  input: "generator/ResizeConv2d_resize_conv1/conv1/BiasAdd"
  input: "generator/InstanceNorm_resize_conv1/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999971718e-10
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/add"
  op: "Add"
  input: "generator/InstanceNorm_resize_conv1/moments/variance"
  input: "generator/InstanceNorm_resize_conv1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/Sqrt"
  op: "Sqrt"
  input: "generator/InstanceNorm_resize_conv1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv1/div"
  op: "RealDiv"
  input: "generator/InstanceNorm_resize_conv1/sub"
  input: "generator/InstanceNorm_resize_conv1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/Relu_3"
  op: "Relu"
  input: "generator/InstanceNorm_resize_conv1/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/Shape"
  op: "Shape"
  input: "generator/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/strided_slice"
  op: "StridedSlice"
  input: "generator/ResizeConv2d_resize_conv2/Shape"
  input: "generator/ResizeConv2d_resize_conv2/strided_slice/stack"
  input: "generator/ResizeConv2d_resize_conv2/strided_slice/stack_1"
  input: "generator/ResizeConv2d_resize_conv2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/Shape_1"
  op: "Shape"
  input: "generator/Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/strided_slice_1"
  op: "StridedSlice"
  input: "generator/ResizeConv2d_resize_conv2/Shape_1"
  input: "generator/ResizeConv2d_resize_conv2/strided_slice_1/stack"
  input: "generator/ResizeConv2d_resize_conv2/strided_slice_1/stack_1"
  input: "generator/ResizeConv2d_resize_conv2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/mul"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv2/strided_slice_1"
  input: "generator/ResizeConv2d_resize_conv2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/mul_1"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv2/mul"
  input: "generator/ResizeConv2d_resize_conv2/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/mul_2"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv2/strided_slice"
  input: "generator/ResizeConv2d_resize_conv2/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/mul_3"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv2/mul_2"
  input: "generator/ResizeConv2d_resize_conv2/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/size"
  op: "Pack"
  input: "generator/ResizeConv2d_resize_conv2/mul_1"
  input: "generator/ResizeConv2d_resize_conv2/mul_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/ResizeNearestNeighbor"
  op: "ResizeNearestNeighbor"
  input: "generator/Relu_3"
  input: "generator/ResizeConv2d_resize_conv2/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0833333358169
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0833333358169
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/max"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/mul"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Assign"
  op: "Assign"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/kernel/read"
  op: "Identity"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/kernel"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/bias/Assign"
  op: "Assign"
  input: "generator/ResizeConv2d_resize_conv2/conv1/bias"
  input: "generator/ResizeConv2d_resize_conv2/conv1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/bias/read"
  op: "Identity"
  input: "generator/ResizeConv2d_resize_conv2/conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/ResizeConv2d_resize_conv2/conv1/bias"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/Conv2D"
  op: "Conv2D"
  input: "generator/ResizeConv2d_resize_conv2/ResizeNearestNeighbor"
  input: "generator/ResizeConv2d_resize_conv2/conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/ResizeConv2d_resize_conv2/conv1/BiasAdd"
  op: "BiasAdd"
  input: "generator/ResizeConv2d_resize_conv2/conv1/Conv2D"
  input: "generator/ResizeConv2d_resize_conv2/conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/moments/mean"
  op: "Mean"
  input: "generator/ResizeConv2d_resize_conv2/conv1/BiasAdd"
  input: "generator/InstanceNorm_resize_conv2/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/moments/StopGradient"
  op: "StopGradient"
  input: "generator/InstanceNorm_resize_conv2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/ResizeConv2d_resize_conv2/conv1/BiasAdd"
  input: "generator/InstanceNorm_resize_conv2/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/moments/variance"
  op: "Mean"
  input: "generator/InstanceNorm_resize_conv2/moments/SquaredDifference"
  input: "generator/InstanceNorm_resize_conv2/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/sub"
  op: "Sub"
  input: "generator/ResizeConv2d_resize_conv2/conv1/BiasAdd"
  input: "generator/InstanceNorm_resize_conv2/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999971718e-10
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/add"
  op: "Add"
  input: "generator/InstanceNorm_resize_conv2/moments/variance"
  input: "generator/InstanceNorm_resize_conv2/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/Sqrt"
  op: "Sqrt"
  input: "generator/InstanceNorm_resize_conv2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv2/div"
  op: "RealDiv"
  input: "generator/InstanceNorm_resize_conv2/sub"
  input: "generator/InstanceNorm_resize_conv2/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/Relu_4"
  op: "Relu"
  input: "generator/InstanceNorm_resize_conv2/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/result_conv/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\t\000\000\000\t\000\000\000 \000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator/result_conv/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0460043698549
      }
    }
  }
}
node {
  name: "generator/result_conv/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0460043698549
      }
    }
  }
}
node {
  name: "generator/result_conv/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/result_conv/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/result_conv/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/result_conv/kernel/Initializer/random_uniform/max"
  input: "generator/result_conv/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
}
node {
  name: "generator/result_conv/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/result_conv/kernel/Initializer/random_uniform/RandomUniform"
  input: "generator/result_conv/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
}
node {
  name: "generator/result_conv/kernel/Initializer/random_uniform"
  op: "Add"
  input: "generator/result_conv/kernel/Initializer/random_uniform/mul"
  input: "generator/result_conv/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
}
node {
  name: "generator/result_conv/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9
        }
        dim {
          size: 9
        }
        dim {
          size: 32
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/result_conv/kernel/Assign"
  op: "Assign"
  input: "generator/result_conv/kernel"
  input: "generator/result_conv/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/result_conv/kernel/read"
  op: "Identity"
  input: "generator/result_conv/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/kernel"
      }
    }
  }
}
node {
  name: "generator/result_conv/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/result_conv/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/result_conv/bias/Assign"
  op: "Assign"
  input: "generator/result_conv/bias"
  input: "generator/result_conv/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/result_conv/bias/read"
  op: "Identity"
  input: "generator/result_conv/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/result_conv/bias"
      }
    }
  }
}
node {
  name: "generator/result_conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator/result_conv/Conv2D"
  op: "Conv2D"
  input: "generator/Relu_4"
  input: "generator/result_conv/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/result_conv/BiasAdd"
  op: "BiasAdd"
  input: "generator/result_conv/Conv2D"
  input: "generator/result_conv/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/moments/mean"
  op: "Mean"
  input: "generator/result_conv/BiasAdd"
  input: "generator/InstanceNorm_resize_conv3/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/moments/StopGradient"
  op: "StopGradient"
  input: "generator/InstanceNorm_resize_conv3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/result_conv/BiasAdd"
  input: "generator/InstanceNorm_resize_conv3/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/moments/variance"
  op: "Mean"
  input: "generator/InstanceNorm_resize_conv3/moments/SquaredDifference"
  input: "generator/InstanceNorm_resize_conv3/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/sub"
  op: "Sub"
  input: "generator/result_conv/BiasAdd"
  input: "generator/InstanceNorm_resize_conv3/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999971718e-10
      }
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/add"
  op: "Add"
  input: "generator/InstanceNorm_resize_conv3/moments/variance"
  input: "generator/InstanceNorm_resize_conv3/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/Sqrt"
  op: "Sqrt"
  input: "generator/InstanceNorm_resize_conv3/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/InstanceNorm_resize_conv3/div"
  op: "RealDiv"
  input: "generator/InstanceNorm_resize_conv3/sub"
  input: "generator/InstanceNorm_resize_conv3/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/Tanh"
  op: "Tanh"
  input: "generator/InstanceNorm_resize_conv3/div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/add"
  op: "Add"
  input: "generator/Tanh"
  input: "generator/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 127.5
      }
    }
  }
}
node {
  name: "generator/mul"
  op: "Mul"
  input: "generator/add"
  input: "generator/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator/Shape"
  op: "Shape"
  input: "generator/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/strided_slice"
  op: "StridedSlice"
  input: "generator/Shape"
  input: "generator/strided_slice/stack"
  input: "generator/strided_slice/stack_1"
  input: "generator/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/Shape_1"
  op: "Shape"
  input: "generator/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator/strided_slice_1"
  op: "StridedSlice"
  input: "generator/Shape_1"
  input: "generator/strided_slice_1/stack"
  input: "generator/strided_slice_1/stack_1"
  input: "generator/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "generator/sub"
  op: "Sub"
  input: "generator/strided_slice"
  input: "generator/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 20
      }
    }
  }
}
node {
  name: "generator/sub_1"
  op: "Sub"
  input: "generator/strided_slice_1"
  input: "generator/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\n\000\000\000\n\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/Slice/size/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator/Slice/size/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator/Slice/size"
  op: "Pack"
  input: "generator/Slice/size/0"
  input: "generator/sub"
  input: "generator/sub_1"
  input: "generator/Slice/size/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator/Slice"
  op: "Slice"
  input: "generator/mul"
  input: "generator/Slice/begin"
  input: "generator/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^generator/conv1/kernel/Assign"
  input: "^generator/conv1/bias/Assign"
  input: "^generator/conv2/kernel/Assign"
  input: "^generator/conv2/bias/Assign"
  input: "^generator/conv3/kernel/Assign"
  input: "^generator/conv3/bias/Assign"
  input: "^generator/ResidualBlock_res1/conv1/kernel/Assign"
  input: "^generator/ResidualBlock_res1/conv1/bias/Assign"
  input: "^generator/ResidualBlock_res1/conv2/kernel/Assign"
  input: "^generator/ResidualBlock_res1/conv2/bias/Assign"
  input: "^generator/ResidualBlock_res2/conv1/kernel/Assign"
  input: "^generator/ResidualBlock_res2/conv1/bias/Assign"
  input: "^generator/ResidualBlock_res2/conv2/kernel/Assign"
  input: "^generator/ResidualBlock_res2/conv2/bias/Assign"
  input: "^generator/ResidualBlock_res3/conv1/kernel/Assign"
  input: "^generator/ResidualBlock_res3/conv1/bias/Assign"
  input: "^generator/ResidualBlock_res3/conv2/kernel/Assign"
  input: "^generator/ResidualBlock_res3/conv2/bias/Assign"
  input: "^generator/ResidualBlock_res4/conv1/kernel/Assign"
  input: "^generator/ResidualBlock_res4/conv1/bias/Assign"
  input: "^generator/ResidualBlock_res4/conv2/kernel/Assign"
  input: "^generator/ResidualBlock_res4/conv2/bias/Assign"
  input: "^generator/ResidualBlock_res5/conv1/kernel/Assign"
  input: "^generator/ResidualBlock_res5/conv1/bias/Assign"
  input: "^generator/ResidualBlock_res5/conv2/kernel/Assign"
  input: "^generator/ResidualBlock_res5/conv2/bias/Assign"
  input: "^generator/ResizeConv2d_resize_conv1/conv1/kernel/Assign"
  input: "^generator/ResizeConv2d_resize_conv1/conv1/bias/Assign"
  input: "^generator/ResizeConv2d_resize_conv2/conv1/kernel/Assign"
  input: "^generator/ResizeConv2d_resize_conv2/conv1/bias/Assign"
  input: "^generator/result_conv/kernel/Assign"
  input: "^generator/result_conv/bias/Assign"
}
versions {
  producer: 24
}
